#!/usr/bin/env ruby

require "esomer"
require "optparse"

subcmd = ARGV.shift

case subcmd
when "build"
  outfile = nil
  optimize = 0

  opt = OptionParser.new
  opt.on("-o OUT") {|filename| outfile = filename }
  opt.on("-O LEVEL") {|l| optimize = l.to_i }
  opt.parse!(ARGV)

  source_file = ARGV.shift

  if source_file.nil?
    raise "Specify source file"
  end

  outfile = File.basename(source_file, ".bf") if outfile == nil && File.extname(source_file) == ".bf"
  outfile ||= "a.out"

  compiler = Esomer::Compiler.new
  compiler.build_executable(File.read(source_file), outfile)
else
  STDERR.puts "Unsupported subcommand"
  exit 1
end

