module Esomer
  VERSION: String

  module AST
    class Node
      attr_reader children: Array[WhileLoop|MoveRelative|AddHere|PrintHere|ReadHere]
    end
    class Program < Node
    end
    class WhileLoop < Node
    end
    class MoveRelative
      attr_reader offset: Integer
      def initialize: (Integer offset) -> void
    end
    class AddHere
      attr_reader value: Integer
      def initialize: (Integer value) -> void
    end
    class PrintHere
    end
    class ReadHere
    end
  end

  class Parser
    def parse: (String str) -> AST::Program
  end

  class CodeGenerator
    def generate_cpp: (AST::Program ast) -> String
    def cpp_header: () -> String
    def generate_cpp_proc: (AST::Node ast, ?Integer indent_level) -> String
  end

  class Compiler
    def build_cpp: (String code, String dest, ?compiler: String, ?optimize_level: Integer) -> void
    def build_executable: (String bf_code, String dest, ?optimize_level: Integer) -> void
  end
end
